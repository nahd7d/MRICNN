# Access data stored in DICOM image format files. 

import sys
!{sys.executable} -m pip install pydicom scikit-image
import pydicom
import skimage
import numpy as np
import pandas as pd


# load two images from the series

root_image_dir = '../resources/Brain-Tumor-Progression/PGBM-001/11-19-1991-FH-HEADBrain Protocols-40993/11.000000-T1post-03326/'
img01 = pydicom.dcmread(f'{root_image_dir}1-01.dcm') # first image in the series
img25 = pydicom.dcmread(f'{root_image_dir}1-25.dcm') # last image in the series

print(img01)


import matplotlib.pyplot as plt
from matplotlib.pyplot import imshow
%matplotlib inline

imshow(img01.pixel_array, cmap='gray')
plt.show()
imshow(img25.pixel_array, cmap='gray')
plt.show()



# Getting a dicom attributeÂ¶
## loop over all the images, load them and store in an array
imgs = []
for i in range(1,26):
    filename = f'{root_image_dir}1-{i:02d}.dcm' # construct the filename we expect to be in our image directory
    imgs.append(pydicom.dcmread(filename))
    
# print each image with the slice location in the title
for i, img in enumerate(imgs):
    imshow(img.pixel_array, cmap='gray')
    plt.title(f'Image #{i+1:02d} : {img[0x00201041].value}')
    plt.show()
# Compare images
compare a slice from the prior slice, this could help to highlight abnormal structures. 
We will reduce the grayscale depth to reduce noise in the diffs.


def reduce_colordepth(img, factor):
    return (img / factor).astype('uint16')

factor = 128

for i in range(0, len(imgs)-1):
    f, axes = plt.subplots(1,2)
    
    axes[0].imshow(reduce_colordepth(imgs[i+1].pixel_array, factor), cmap='gray')
    axes[0].set_title(f'Image {i+2:02d}')
    
    axes[1].imshow(reduce_colordepth(imgs[i+1].pixel_array, factor) - reduce_colordepth(imgs[i].pixel_array, factor), cmap='gray')
    axes[1].set_title(f'Image diff {i+2:02d} - {i+1:02d}')

    plt.show()


